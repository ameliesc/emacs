(setq package-archives '(("gnu" . "https://elpa.gnu.org/packages/")
                        ("marmalade" . "https://marmalade-repo.org/packages/")
                         ("melpa" . "https://melpa.org/packages/")))(when (>= emacs-major-version 24))

 (setq package-enable-at-startup nil)
 (package-initialize)
;; (require 'peacock-theme)

;; (defun tex-mode-theme-hook ()
;;   (require 'leuven-theme))


;;  (add-hook 'tex-mode-hook
;;    'tex-mode-theme-hook)


;; sample code for setting a background color depending on file name extension

(defun my-set-theme-on-mode ()
  "set theme color depending on file suffix"
  (interactive)
  (let ((fileNameSuffix (file-name-extension (buffer-file-name) ) ))
    (cond
     ((string= fileNameSuffix "el" ) (load-theme 'peacock t ))
     ((string= fileNameSuffix "tex" ) (load-theme 'leuven t))
     (t (load-theme 'peackock t))
     )
    ))

(add-hook 'find-file-hook 'my-set-theme-on-mode)

;enable line numbers
(global-linum-mode t)
					
(defun system-is-mac ()
  (interactive)
  (string-equal system-type "darwin"))

 (defun system-is-linux ()
   (interactive)
   (string-equal system-type "gnu/linux"))

 ; set command key to be meta instead of option
 (if (system-is-mac)
     (setq ns-command-modifier 'meta))

; set path for emacs in mac -systm since faulty
(let ((default-directory  "~/.emacs.d/elpa/"))
  (normal-top-level-add-subdirs-to-load-path))

(when (memq window-system '(mac ns))
  (exec-path-from-shell-initialize))
;; (setenv "PATH" (concat (getenv "PATH") ":/sw/bin"))
;; ;;(setq exec-path (append exec-path '("/sw/bin")))
;; (setq exec-path (append exec-path '("/Library/TeX/texbin")))

;;  ; set PATH, because we don't load .bashrc
;; (setenv
;;  "PATH" (concat
;;    "$HOME/bin:"
;;    "/bin:"
;;    "/Usr/bin:"
;;    "/sbin:"
;;    "/usr/sbin:"
;;    "/usr/local/bin:"
;;    "/usr/local/sbin"))

;; ; Set PYTHONPATH, because we don't load .bashrc
;; (setenv "PYTHONPATH" "/usr/local/lib/python2.7/site-packages:")

; default window width and height
(defun custom-set-frame-size ()
  (add-to-list 'default-frame-alist '(height . 56))
  (add-to-list 'default-frame-alist '(width . 100)))
(custom-set-frame-size)
(add-hook 'before-make-frame-hook 'custom-set-frame-size)

;;;; Interface and typing
;; turn on highlight matching brackets when cursor is on one
(show-paren-mode 1)
(setq show-paren-style 'mixed) ; highlight entire expression


;; Yas snippet
(require 'yasnippet)
(yas-global-mode 1)



;; ;; AUCTeX
 	
(load "auctex.el" nil t t)
;(load "preview-latex.el" nil t t)
;; auto-complete setup, sequence is important
(require 'auto-complete)
(add-to-list 'ac-modes 'latex-mode) ; beware of using 'LaTeX-mode instead
(require 'ac-math) ; package should be installed first 
(defun my-ac-latex-mode () ; add ac-sources for latex
   (setq ac-sources
         (append '(ac-source-math-unicode
           ac-source-math-latex
           ac-source-latex-commands)
                 ac-sources)))
(add-hook 'LaTeX-mode-hook 'my-ac-latex-mode)
(setq ac-math-unicode-in-math-p t)
(ac-flyspell-workaround) ; fixes a known bug of delay due to flyspell (if it is there)
(add-to-list 'ac-modes 'org-mode) ; auto-complete for org-mode (optional)
(require 'auto-complete-config) ; should be after add-to-list 'ac-modes and hooks
(ac-config-default)
(setq ac-auto-start nil)            ; if t starts ac at startup automatically
(setq ac-auto-show-menu t)
(global-auto-complete-mode t) 

;;(load "preview-latex.el" nil t t)

;; (if (system-is-mac)
;;  (progn
;;   (require 'tex-site)
;;   (require 'font-latex)
;;   (setq TeX-view-program-list
;;    (quote
;;     (("Skim"
;;       (concat "/Applications/Skim.app/"
;;         "Contents/SharedSupport/displayline"
;;         " %n %o %b")))))
;;   (setq TeX-view-program-selection
;;    (quote (((output-dvi style-pstricks) "dvips and gv")
;;       (output-dvi "xdvi")
;;       (output-pdf "Skim")
;;       (output-html "xdg-open")))))

;;   (if (system-is-linux)
;;    (setq TeX-view-program-selection
;;     (quote (((output-dvi style-pstricks) "dvips and gv")
;;        (output-dvi "xdvi")
;;        (output-pdf "evince"
;; 		   (output-html "xdg-open"))))))

  
;;   ;; C++ settings
  
;; (require 'cc-mode)
  
;; (setq-default c-basic-offset 4 c-default-style "linux")
;; (setq-default tab-width 4 indent-tabs-mode t)
;; (define-key c-mode-base-map (kbd "RET") 'newline-and-indent)

;; (require 'autopair)
;; (autopair-global-mode 1)
;; (setq autopair-autowrap t)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   (quote
    ("26ce7eea701bfd143ac536e6805224cff5598b75effb60f047878fe9c4833ae4" default))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
